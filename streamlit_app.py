import itertools
import operator
import random

import streamlit as st
from intvalpy import Interval

import stixlib as sx
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

from maths import CombinationGenerator
from projectsharablestate import ProjectSettings, AppEntry, DefenderCriteria, AttackerCriteria


@st.cache_data(persist=True)
def cached_get_src():
    thesrc = sx.get_data_from_branch("enterprise-attack")
    # st.success("Fetched latest MITRE ATT&CK data")
    return thesrc


# @st.cache_data(presist=True)
def cached_get_technique_to_mitig_relations(thesrc):
    technique_to_mitig_relations = sx.technique_mitigated_by_mitigations(thesrc)
    return technique_to_mitig_relations


def save_sim_settings():
    st.session_state["defender_criteria"] = st.session_state.form_admin_criteria
    st.session_state["attacker_criteria"] = st.session_state.form_attacker_criteria
    st.session_state["sim_amount"] = st.session_state.form_sim_amount
    st.session_state["ucb_usage"] = st.session_state.form_ucb_usage
    st.session_state["ready_to_sim"] = True


def save_attacker_settings():
    project_settings().attacker_tactics = [t.get("id") for t in st.session_state.form_available_tactics]
    project_settings().attacker_max_interval = st.session_state.form_app_max_interval


def add_app_entry():
    if not hasattr(project_settings(), 'defender_apps'):
        st.session_state["project_settings"].defender_apps = []

    new_entry = AppEntry
    new_entry.app_name = st.session_state.form_app_name
    new_entry.app_price = st.session_state.form_app_price
    new_entry.app_loss = Interval(st.session_state.form_app_loss[0], st.session_state.form_app_loss[1])
    new_entry.app_mitigations = [m.get("id") for m in st.session_state.form_app_mitig]
    st.session_state["project_settings"].defender_apps.append(new_entry)


def project_settings() -> ProjectSettings:
    return st.session_state['project_settings']


st.set_page_config(page_title="Game Theory Security", page_icon='üßÆ', layout="wide")

src = cached_get_src()

if "intro" not in st.session_state:
    st.session_state["intro"] = False
    st.session_state["ready_to_sim"] = False

if "newproject" not in st.session_state:
    st.session_state["newproject"] = True
    new_project = ProjectSettings
    new_project.mitre_domain = "enterprise-attack"
    new_project.mitre_version = "14.1"
    st.session_state["project_settings"] = ProjectSettings

col1, col2 = st.columns([2, 1])

col1.write('''# –ê–Ω–∞–ª–∏–∑ –∑–∞—â–∏—â–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–æ—Ä–∏–∏ –∏–≥—Ä 
–¢–µ–æ—Ä–∏—è –∏–≥—Ä –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤–æ –º–Ω–æ–≥–∏—Ö —Å—Ñ–µ—Ä–∞—Ö –∂–∏–∑–Ω–∏ –≤–∫–ª—é—á–∞—è —ç–∫–æ–Ω–æ–º–∏–∫—É, –±–∏–ª–æ–≥–∏—é –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–∞—É–∫–∞—Ö. –û—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è 
–≤ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∏–≥—Ä—ã –º–µ–∂–¥—É N –∞–≥–µ–Ω—Ç–∞–º–∏, –±–æ—Ä—è—â–∏–º—Å—è –∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ —Ä–µ—Å—É—Ä—Å–æ–≤. –í –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –∏–≥—Ä–∞—Ö 
—Ü–µ–ª–∏ –∞–≥–µ–Ω—Ç–æ–≤ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–Ω—ã–º–∏, –ø–æ–º–∏–º–æ –ø–æ–ª—É—á–µ–Ω–∏—è –±–æÃÅ–ª—å—à–æ–≥–æ —á–∏—Å–ª–∞ —Ä–µ—Å—É—Ä—Å–æ–≤.

–î–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–µ–æ—Ä–∏—é –∏–≥—Ä –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∑–∞—â–∏—â–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, —Å–∏–º—É–ª–∏—Ä—É—è –∏–≥—Ä—É –º–µ–∂–¥—É 
–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º "–∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–º" –∏ "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º" (—Ç.–µ. –≤–∞–º–∏). –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é 
–∑–∞—â–∏—Ç—ã —Å–∏—Å—Ç–µ–º—ã (–≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π).

–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞—Ç–∞–∫, –º–µ—Ä –∑–∞—â–∏—Ç –∏ —Ç–∞–∫—Ç–∏–∫ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é [**MITRE ATT&CK**](https://attack.mitre.org/), 
–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø—Ä–∏–±–ª–µ–∂–∞—è —Å–∏–º—É–ª—è—Ü–∏—é –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É –º–∏—Ä—É.

–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∞—á–∞—Ç—å –Ω–∏–∂–µ.
''')

col2.image('prisonerdillema.png', caption="–ó–Ω–∞–º–µ–Ω–∏—Ç–∞—è –¥–∏–ª–ª–µ–º–∞ –∑–∞–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—á–Ω–æ–π –∏–≥—Ä–æ–π")

if st.button("–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç", key='start_') and not st.session_state['intro']:
    st.session_state['intro'] = True
    st.session_state['newproject'] = True

if st.button("–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–µ–∫—Ç", key='loadproject_') and not st.session_state['intro']:
    st.session_state['intro'] = True
    st.session_state['newproject'] = False
    # TODO: add button for loading project

if st.session_state['intro']:
    tactics = sx.get_tactics(src)
    possible_win_conditions = ['UnlimitedResourcesMaxDamage']

    st.write("---")
    st.write("## –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∏–≥—Ä—ã")
    col3, col4 = st.columns(2)
    col3.write('''
    –ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–æ–¥–µ–ª—å –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞, –µ–≥–æ —Ü–µ–ª—å –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º–æ–µ 
    "—Ç–∞–∫—Ç–∏–∫–∞–º–∏" –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ MITRE ATT&CK.
    
    –í—ã–±—Ä–∞–Ω–Ω—ã–µ –≤–∞–º–∏ —Ç–∞–∫—Ç–∏–∫–∏ –±—É–¥—É—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –Ω–∞–±–æ—Ä –∞—Ç–∞–∫, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤ –º–∞—Ç—Ä–∏—Ü–µ –∏–≥—Ä—ã, –Ω–æ –Ω–µ –Ω–∞ –Ω–∞–±–æ—Ä –º–µ—Ä –∑–∞—â–∏—Ç—ã 
    (—Ç–∞–∫ –∫–∞–∫ —Å–∏–º—É–ª–∏—Ä—É–µ–º–∞—è –∏–≥—Ä–∞ —è–≤–ª—è–µ—Ç—Å—è –∏–≥—Ä–æ–π —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π).
    
    –í —Ñ–æ—Ä–º–µ —Å–ø—Ä–∞–≤–∞ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞.
    
    –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏—é –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —É—Å–ª–æ–≤–∏–π.
    
    ''')

    with col4:
        with st.form("attacker-settings"):
            available_tactis = st.multiselect(
                label="–¢–∞–∫—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫—É",
                options=tactics,
                format_func=lambda x: x.get("name"),
                help="–°–ø–∏—Å–æ–∫ —Ç–∞–∫—Ç–∏–∫ –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ [–∑–¥–µ—Å—å](https://attack.mitre.org/tactics/enterprise/)",
                key='form_available_tactics'
            )
            app_max_interval = st.number_input(
                value=1000,
                key="form_app_max_interval",
                label='–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑–º–æ–∂–Ω—ã–π —É—â–µ—Ä–±',
                help='–ù–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –Ω–∏–∂–µ (–≤ —É.–µ.)'
            )
            submit = st.form_submit_button('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å', on_click=save_attacker_settings)

    if hasattr(project_settings(), 'attacker_tactics') and project_settings().attacker_tactics:
        with st.expander(label="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–∞–∫—Ç–∏–∫–∏"):
            st.write("#### –í—ã–±—Ä–∞–Ω–Ω—ã–µ –≤–∞–º–∏ —Ç–∞–∫—Ç–∏–∫–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–∞–∫ DataFrame:")
            form_tactics_df = pd.DataFrame(project_settings().attacker_tactics)
            st.dataframe(form_tactics_df)

        mitigations = sx.remove_revoked_deprecated(sx.get_mitigations(src))

        st.write('---')
        st.write("## –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã –∏ —Ü–µ–Ω—ã")
        col5, col6 = st.columns([0.4, 0.6])
        with col5:
            '''
            –ú–∞—Ç—Ä–∏—á–Ω—ã–µ –∏–≥—Ä—ã –≤ —Ç–µ–æ—Ä–∏–∏ –∏–≥—Ä –æ–ø–µ—Ä–∏—Ä—É—é—Ç "–ø–ª–∞—Ç–µ–∂–Ω—ã–º–∏ –º–∞—Ç—Ä–∏—Ü–∞–º–∏". –î–ª—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è —Å–∏–º—É–ª—è—Ü–∏–∏ –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ 
            –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≤ —Å–∏—Å—Ç–µ–º–µ, –∫–∞–∫–∏–µ –º–µ—Ä—ã –∑–∞—â–∏—Ç—ã —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∫–∞–∂–¥—ã–π —Ä–µ—Å—É—Ä—Å, –∏ "—Ü–µ–Ω—É" —Ä–µ—Å—É—Ä—Å–∞.

            –ò–≥—Ä–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–∞—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —è–≤–ª—è–µ—Ç—Å—è *–±–∏–º–∞—Ç—Ä–∏—á–Ω–æ–π* –æ–∑–Ω–∞—á–∞—è, —á—Ç–æ –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä 
            –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É—é—Ç—Å—è –Ω–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ –º–∞—Ç—Ä–∏—Ü—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π, –Ω–µ –∏–º–µ—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—Ç—Ä–∏—Ü–µ –¥—Ä—É–≥–æ–≥–æ.

            –î–ª—è –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞ —ç—Ç–æ –º–∞—Ç—Ä–∏—Ü–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ —É—â–µ—Ä–±–∞ –ø—Ä–∏ –∞—Ç–∞–∫–µ –Ω–∞ —Ä–µ—Å—É—Ä—Å, –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —ç—Ç–æ —Å—Ä–µ–¥—Å—Ç–≤–∞ 
            –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω—ã–µ –Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∑–∞—â–∏—Ç–Ω—ã—Ö –º–µ—Ä.

            –†–µ—Å—É—Ä—Å–∞–º–∏ –º–æ–≥—É—Ç –±—ã—Ç—å:
            - –ù–∞–ø–∏—Å–∞–Ω–Ω–æ–µ –≤–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            - –°—Ç–æ—Ä–æ–Ω–µ–µ –ü–û (–∞–Ω—Ç–∏–≤–∏—Ä—É—Å—ã, –±—Ä–µ–Ω–¥–º–∞—É–µ—Ä—ã –∏ –ø—Ä–æ—á.)
            - –ú–∞—à–∏–Ω—ã (—Å–µ—Ä–≤–µ—Ä–∞, —Ä–∞–±–æ—á–∏–µ –º–µ—Å—Ç–∞, —Å–µ—Ç–µ–≤—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –∏ –¥—Ä.)

            –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã —è–≤–ª—è–µ—Ç—Å—è –≤–∞–∂–Ω—ã–º —Ñ–∞–∫—Ç–æ—Ä–æ–º –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏ —Å–∏–º—É–ª—è—Ü–∏–∏. –í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏:
            - –î–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–µ–Ω—ã –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã—Å—Ç–∞–≤–∏—Ç—å —Ü–µ–Ω—É —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è 
            (–Ω–∞–ø—Ä–∏–º–µ—Ä —É–º–Ω–æ–∂–∏—Ç—å –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω—ã–µ —á–∞—Å—ã –Ω–∞ –ø–æ—á–∞—Å–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞)
            - –°—Ç–æ—Ä–æ–Ω–Ω–µe –ü–û –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –µ–≥–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ
            - –§–∏–∑–∏—á–µ—Å–∫–∏–µ –º–∞—à–∏–Ω—ã –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —Ü–µ–Ω–æ–π –æ –∏—Ö –∑–∞–∫—É–ø–∫–µ –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—é.
            '''

        with col6:
            with st.form("admin-app-specs"):
                app_name = st.text_input(
                    label='–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
                    key='form_app_name'
                )
                app_price = st.number_input(
                    label='–¶–µ–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
                    key='form_app_price',
                    help='–≤ —É.–µ.'
                )
                app_loss = st.slider(
                    label='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª —É—â–µ—Ä–±–∞ –ø—Ä–∏ –∞—Ç–∞–∫–µ',
                    min_value=0,
                    max_value=st.session_state.form_app_max_interval,
                    step=1,
                    value=(0, 100),
                    key='form_app_loss'
                )
                app_mitigations = st.multiselect(
                    label="–ú–µ—Ä—ã –∑–∞—â–∏—Ç—ã —Ä–µ–∞–ª–∏–∑—É–µ–º—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º",
                    options=mitigations,
                    format_func=lambda x: x.get("name"),
                    help="–°–ø–∏—Å–æ–∫ –º–µ—Ä –∑–∞—â–∏—Ç—ã –µ—Å—Ç—å [–∑–¥–µ—Å—å](https://attack.mitre.org/mitigations/enterprise/)",
                    key='form_app_mitig'
                )
                submit = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å", on_click=add_app_entry)

        if hasattr(project_settings(), 'defender_apps') and project_settings().defender_apps:
            st.write("#### –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π")
            defender_apps_df = pd.DataFrame([da.as_dict(da) for da in project_settings().defender_apps])
            st.dataframe(defender_apps_df)

        st.write('---')
        st.write("## –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ó–∞–¥–∞—á–∏")
        col7, col8 = st.columns([0.5, 0.5])
        if "defender_criteria" not in st.session_state:
            st.session_state["defender_criteria"] = ''

        with col7:
            st.write("–í –¥–∞–Ω–Ω–æ–º –ø—É–Ω–∫—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞")
            if st.session_state["defender_criteria"] != '':
                st.write(st.session_state["defender_criteria"].value[1])

        with col8:
            with st.form("sim-settings"):
                sim_amount = st.number_input(
                    label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º—É–ª—è—Ü–∏–π",
                    help="–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —á–∏—Å–ª–æ —Å–∏–º—É–ª—è—Ü–∏–π –¥–ª—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ",
                    step=1,
                    key="form_sim_amount"
                )
                admin_criteria = st.selectbox(
                    label="–ö—Ä–∏—Ç–µ—Ä–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                    options=[c for c in DefenderCriteria],
                    index=None,
                    key="form_admin_criteria",
                    placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π",
                    format_func=lambda c: c.value[0],
                )
                attacker_criteria = st.selectbox(
                    label="–ö—Ä–∏—Ç–µ—Ä–∏–π –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞",
                    options=[c for c in AttackerCriteria],
                    index=None,
                    key="form_attacker_criteria",
                    placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π",
                    format_func=lambda c: c.value[0],
                )

                ucb_usage = st.checkbox(
                    label="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ UCB",
                    key="form_ucb_usage",
                    help="–í–º–µ—Å—Ç–æ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π, –≤ —Å–∏–º—É–ª—è—Ü–∏—è—Ö –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è "
                         "Upper-Confidence Bound, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–ø–æ–ª–æ–≥–∞–µ—Ç –±–æ–ª–µ–µ \"—É–º–Ω—ã–π\" –≤—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–π"
                )
                submit = st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", on_click=save_sim_settings)

        if st.session_state["ready_to_sim"]:
            st.write("# –°–∏–º—É–ª—è—Ü–∏—è")

            # 1. –°–æ—Å—Ç–∞–≤–∏–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–∞–∫—Ç–∏–∫–∏.
            # –≠—Ç–æ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Ç–µ—Ö–Ω–∏–∫ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–∞–∫—Ç–∏–∫–∏ (–ø–æ —Å—É—Ç–∏ —Å–æ—á–µ—Ç–∞–Ω–∏–µ)
            getting_ready_progress_text = f"–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫ –∏ –º–µ—Ä –∑–∞—â–∏—Ç"
            calc_bar = st.progress(0, text=getting_ready_progress_text)

            tactics = sx.get_tactics_by_ids(thesrc=src,
                                            tactics_ids=project_settings().attacker_tactics)

            attacker_strategies = list()
            for tactic in tactics:
                attacker_strategies += sx.get_techniques_by_tactics(thesrc=src,
                                                                    tactics=[tactic.get("x_mitre_shortname")])
            # Sort lexicographically
            attacker_strategies.sort(key=operator.attrgetter("id"), reverse=True)

            calc_bar.progress(10, getting_ready_progress_text)

            defender_strategies = list()
            for app in project_settings().defender_apps:
                defender_strategies += sx.get_mitigations_by_ids(thesrc=src,
                                                                 migitation_ids=app.app_mitigations)
            # Sort lexicographically
            defender_strategies.sort(key=operator.attrgetter("id"), reverse=True)

            st.write(defender_strategies)

            calc_bar.progress(20, getting_ready_progress_text)

            # mitigations_available = sx.get_mitigations_by_ids(thesrc=src, migitation_ids=[app.app_mitigations for app in project_settings().defender_apps])

            # –ö–æ–º–±–∏–Ω–∞—Ç–æ—Ä–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —á–∏—Å–µ–ª,
            # –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –Ω—É–∂–Ω—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –æ—Ç –µ—ë –ª–µ–∫—Å–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è –≤ –Ω–∞–±–æ—Ä–µ –≤—Å–µ—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –±–µ–∑ –ø–æ–¥—Å—á–µ—Ç–∞ –∫–∞–∂–¥–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
            combination_resolver_attacks = CombinationGenerator(attacker_strategies)
            combination_resolver_mitigations = CombinationGenerator(defender_strategies)

            M_for_defender = 2 ** len(defender_strategies) - 1
            M_for_attacker = 2 ** len(attacker_strategies) - 1
            col10, col11 = st.columns(2)

            with col10:

                f'''
                ### –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π:
                
                –§–æ—Ä–º—É–ª–∞:
                
                $$M = 2^S - 1$$, S - —á–∏—Å–ª–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π 
                
                –î–ª—è –∞—Ç–∞–∫—É—é—â–µ–≥–æ: $$M_A = 2^{{ {len(attacker_strategies)} }} - 1 = {M_for_attacker}$$
                –î–ª—è –∑–∞—â–∏—â–∞—é—â–µ–≥–æ: $$M_A = 2^{{{len(defender_strategies)}}} - 1 = {M_for_defender}$$
                '''

            t_to_m_relations = cached_get_technique_to_mitig_relations(src)

            monte_carlo_vals = []

            # st.write(attacker_strategies)

            # 1.1.2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞—Ç–∞–∫ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ç–∞–∫—Ç–∏–∫
            techniques = sx.get_techniques_by_tactics(thesrc=src, tactics=[t.get("x_mitre_shortname") for t in tactics])

            # 1.1.3. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∏ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏
            techniques = sx.remove_revoked_deprecated(techniques)
            # 1.1.4. –ü–æ–ª—É—á–∞–µ–º –º–µ—Ä—ã –∑–∞—â–∏—Ç—ã

            # mitigations = sx.get_mitigations_by_ids(thesrc=src, migitation_ids=all_mitigations)

            # mitigations = sx.remove_revoked_deprecated(sx.get_mitigations(src))

            # techniques_df = pd.DataFrame(techniques_data)
            # st.dataframe(techniques_df.loc[:, ~techniques_df.columns.isin(['kill_chain_phases', 'external_references'])])
